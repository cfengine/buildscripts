From 0f0aaab0e8f8150df358a4934dec42cdac5abae2 Mon Sep 17 00:00:00 2001
From: Vratislav Podzimek <v.podzimek@mykolab.com>
Date: Wed, 4 Sep 2019 16:25:53 +0200
Subject: [PATCH 02/12] Do not abort() if a user-define assert function is
 called

It's up to the user code to handle the problem. If it wants to
abort(), it can do it itself, there's no point in enforcing it.
---
 libraries/liblmdb/mdb.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/libraries/liblmdb/mdb.c b/libraries/liblmdb/mdb.c
index 8cecdb2..7b166d7 100644
--- a/libraries/liblmdb/mdb.c
+++ b/libraries/liblmdb/mdb.c
@@ -1541,8 +1541,10 @@ mdb_assert_fail(MDB_env *env, const char *expr_txt,
 		file, line, expr_txt, func);
 	if (env->me_assert_func)
 		env->me_assert_func(env, buf);
-	fprintf(stderr, "%s\n", buf);
-	abort();
+    else {
+        fprintf(stderr, "%s\n", buf);
+        abort();
+    }
 }
 #else
 # define mdb_assert0(env, expr, expr_txt) ((void) 0)
-- 
2.39.0

