#!/bin/sh -ex

case "$0" in
  /*) SCRIPTDIR=`dirname "$0"`;;
  *) SCRIPTDIR=`pwd`/`dirname "$0"`;;
esac
BASEDIR=`dirname "$SCRIPTDIR"`
BASEDIR=`dirname "$BASEDIR"`

PATH="$PATH:$SCRIPTDIR"

usage()
{
  exec >&2
  echo "$0 <pkgname> <tests> <cross-target/native> <optimize> <debugsymbols> <version>"
  exit 1
}

fatal()
{
  echo "$@" >&2
  exit 42
}

if [ $# -ne 6 ]; then
  usage
fi

PKGNAME="$1"
TESTS="$2"
TARGET="$3"
OPTIMIZE="$4"
DEBUGSYM="$5"
VERSION="$6"

P=$BASEDIR/buildscripts/deps-packaging/$PKGNAME
SYS=`uname -s`

echo
echo "========================= Building RPM for: $PKGNAME =========================="
echo

if [ $SYS = "AIX" ]; then
  case "$PKGNAME" in
    openldap)
      SPEC="$P/cfbuild-$PKGNAME-aix.spec";;
    *)
      SPEC="$P/cfbuild-$PKGNAME.spec";;
  esac
else
  SPEC="$P/cfbuild-$PKGNAME.spec"
fi

# Copy source code

rm -rf $BASEDIR/$PKGNAME

mkdir -p $BASEDIR/$PKGNAME/BUILD
mkdir -p $BASEDIR/$PKGNAME/RPMS
mkdir -p $BASEDIR/$PKGNAME/SOURCES
mkdir -p $BASEDIR/$PKGNAME/SRPMS

SRCFILES=$(pkg-get-src $P)

if [ x"$SRCFILES" != x ]
then
    echo "$SRCFILES" | while read srcfile opts
    do
        ln -sf $srcfile $BASEDIR/$PKGNAME/SOURCES
    done

    # Almost, but not completely, equivalent to -a, compatible with AIX.
    cp -pPR $P/* $BASEDIR/$PKGNAME/SOURCES
fi


# Prepare options

if [ $TARGET != native ]; then
  echo "WAT?"
  exit 42
fi

case "$TESTS" in
  no)
    RPMBUILD_OPTIONS="--define 'with_testsuite 0'";;
  yes)
    RPMBUILD_OPTIONS="--define 'with_testsuite 1'";;
  *)
    fatal "Unknown tests option: $TESTS";;
esac

case "$OPTIMIZE" in
  no)
    RPMBUILD_OPTIONS="$RPMBUILD_OPTIONS --define 'with_optimize 0'";;
  yes)
    RPMBUILD_OPTIONS="$RPMBUILD_OPTIONS --define 'with_optimize 1'";;
  *)
    fatal "Unknown optimize option: $OPTIMIZE";;
esac

case "$DEBUGSYM" in
  yes)
    RPMBUILD_OPTIONS="$RPMBUILD_OPTIONS --define 'with_debugsym 1'";;
  no)
    RPMBUILD_OPTIONS="$RPMBUILD_OPTIONS --define 'with_debugsym 0'";;
  *)
    fatal "Unknown debugsym option: $DEBUGSYM";;
esac

env

# eval and double quoting is needed to separate args,
# example cmd --define 'a b':
#     - argv[1] = --define
#     - argv[2] = a b
eval $RPMBUILD_CMD -bb \
  --define "'_topdir $BASEDIR/$PKGNAME'" \
  --define "'version $VERSION'" \
  --define "'buildprefix $BUILDPREFIX'" \
  --define "'make $MAKE'" \
  $RPMBUILD_OPTIONS $SPEC
