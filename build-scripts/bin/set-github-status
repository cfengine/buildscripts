#!/usr/bin/env bash
# GitHub reporting script
# Args:
#   Either:
#     $1 - where to get repos and PRs info from
#     $2 - what state to report to GitHub
#     $3 - job spec (e.g. "ci/testing-pr/PACKAGES_HUB_x86_64_linux_redhat_7")
#     $4 - description of the status
#     $5 - URL to link from the status (e.g. $JOB_URL of the jenkins job)
#   Or:
#     $1 - where to get repos and PRs info from
#     $2 - path to a JSON file ready to POST to GH
# Env:
#   see get-pr-token adjacent to this file

PRs_file="$1"
if [ -z "$PRs_file" ]; then
    exit 1
fi

if [ $# = "2" ]; then
    # just two args, check if it is a file we can read
    if [ -r "$2" ]; then
        JSON_file="$2"
    else
        "Path to a readable JSON file or status details required!"
        exit 1
    fi
else
    state="$2"
    job_spec="$3"
    description="$4"
    job_url="$5"
    if [ -z "$job_url" ]; then
        job_url="https://ci.cfengine.com/"
    fi

    if [ -z "$state" ] || [ -z "$job_spec" ]; then
        echo "Missing arguments"
        exit 1
    fi
fi

function set_status() {
set -ex
    # Actually set status at GitHub
    # Args:
    #   $1 - repo identifier (organization/project)
    #   $2 - statuses API URL of the PR
    # Env:

    if [ -z "$1" ]; then
      echo "Missing repo identifier (organization/project) as first argument"
      exit 1
    fi
    if [ -z "$2" ]; then
      echo "Missing pull request API URL as second argument"
      exit 1
    fi

    # curl 7.88 ish supports --header @file but apparently 7.52 (on bootstrap vm (deb-9)) does not, so compose a script
    curl_script_file="$(mktemp)"
    chmod 600 "$curl_script_file"
    echo -n "curl --fail --insecure -X POST --header \"Authorization: Bearer " > "$curl_script_file"
    _dir=$(readlink -e "$(dirname "$0")")
    "$_dir"/get-pr-token "$1" >> "$curl_script_file"
    echo -n "\" $2 --data " >> "$curl_script_file"

    if [ -n "$JSON_file" ]; then
        (
          set +x # hide secrets
          echo "@$JSON_file" >> "$curl_script_file"
        )
    else
        (
          set +x # hide secrets
          echo -n "@- <<EOF" >> "$curl_script_file"
          echo -n "
{
  \"state\" : \"$state\",
  \"target_url\" : \"$job_url\",
  \"description\" : \"$description\",
  \"context\" : \"$job_spec\"
}
EOF" >> "$curl_script_file"
        )
    fi

# uncomment the below cat to see the curl_script_file location
#    cat "$curl_script_file" >&2
    bash "$curl_script_file"

# uncomment the below file deletion to debug curl_script_file
    rm "$curl_script_file"
    return $?
}

while read -r line; do
    # the PRs file has lines in the following format:
    #   REPO_IDENTIFIER PR_ID PR_STATUS_API_URL
    REPO_IDENTIFIER=$(echo "$line" | awk '{ print $1 };')
    STATUS_URL=$(echo "$line" | awk '{ print $3 };')
    set_status "$REPO_IDENTIFIER" "$STATUS_URL"
done < "$PRs_file"
