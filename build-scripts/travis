#!/bin/bash

set -ex

PREFIX=/var/cfengine

REPO_DIR=aleksei/$TRAVIS_REPO_SLUG/$TRAVIS_BRANCH
test "$TRAVIS_PULL_REQUEST" = "false" || REPO_DIR=$REPO_DIR/$TRAVIS_PULL_REQUEST
test "$TRAVIS_PULL_REQUEST" = "false" && SHA=$TRAVIS_COMMIT || SHA=$TRAVIS_PULL_REQUEST_SHA
S3_DIR=s3://cfengine-travis-artifacts/$REPO_DIR
DOWNLOAD_DIR=https://cfengine-travis-artifacts.s3.amazonaws.com/$REPO_DIR
DEB_PACKAGE=$S3_DIR/build.deb
TESTD=$S3_DIR/cf-testd
export

# Assuming we run from a dir where we have subdirs for other repos, at least
# one of them should contain a file with secrets to access S3 and post build
# status updates to GitHub.
# It's not a fatal error if this file does not exist. However, it's a fatal
# error if any of key variables are unset after sourcing it. This way we can
# set them in some other way (in .travis.yml or Travis web intreface)
# We wrap it into set +x / set -x so secrets didn't appear in the log
set +x
. */secrets.txt || true
test -z "$ARTIFACTS_KEY" -o -z "$ARTIFACTS_SECRET" -o -z "$GITHUB_STATUS_TOKEN" && exit 1
set -x

# remove unwanted packages
sudo apt-get purge apache* "postgresql*" redis*
# On Travis, hostname can be ridiculously long - let's truncate it
sudo hostname localhost

# Purge saved lists to avoid "Hash Sum mismatch" apt-get error on the next line
sudo rm -rf /var/lib/apt/lists/*
sudo apt-get update
sudo apt-get install s3cmd
(
  # avoid showing secrets in log
  set +x
  echo $ARTIFACTS_KEY
  echo $ARTIFACTS_SECRET
  echo
  echo
  echo
  echo
  echo
  echo n
  echo y
) | s3cmd --configure >/dev/null

install_package() {
    sudo dpkg -i cfe.deb || (
        exit_code=$?
        echo "Problem installing CFEngine package $exit_code"
        echo "=== BEGIN /var/log/CFEngine*-Install.log ==="
        sudo cat /var/log/CFEngine*-Install.log
        echo "=== END /var/log/CFEngine*-Install.log ==="
        return $exit_code
    )
}

case "$JOB" in
    ( build )
        # remove unwanted travis stuff - it contains, for example, PHP5
        # (while we need PHP7 minimum)
        mv /home/travis/.phpenv /home/travis/.phpenv.del || true

        for i in core nova enterprise mission-portal masterfiles
        do
            if [ -d $i ]
            then
            # Repo already checked out. Probably by Travis.
            # Travis checks out only one branch, what confuses `determine-version.py`.
            # To fix it, we need to ask git to checkout other branches, too.
            # But we do it only for "core" and those repos where
            # ./3rdparty/core/determine-version.py file exists.
            # (Other repos are not checked for versions, we assume).
            if [ "$i" = "core" -o -f $i/3rdparty/core/determine-version.py ]
            then
                (
                cd $i
                # Rename the branch we're on, so that it's not in the way for the
                # subsequent fetch. It's ok if this fails, it just means we're not on any
                # branch.
                git branch -m temp-branch || true
                # Fetch rest of branches
                git fetch origin 'refs/heads/*:refs/remotes/origin/*'
                # Get last remaining tags, if any.
                git fetch --tags origin
                # This was partially taken from Mender repo:
                # https://github.com/mendersoftware/mender/blob/fc27422420bd3859d917579484856debdfa50e5f/.travis.yml#L61-L69
                )
            fi
            else
                git clone --recursive -b "$TRAVIS_BRANCH" git@github.com:cfengine/$i.git
            fi
        done

        (
        if test -f "mission-portal/public/scripts/package.json"; then
            # packages needed for installing Mission portal dependencies
            sudo apt-get -y install npm
            cd mission-portal/public/scripts
            # install dependencies from npmjs
            npm i
            # make a build of jquery-ui from sources
            cd node_modules/jquery-ui
            npm i
            nodejs node_modules/grunt-cli/bin/grunt sizer concat
            cp -r ./themes/base/images/ ./dist/
            rm -rf ./node_modules
        fi
        )

        (
        if test -f "mission-portal/composer.json"; then
            sudo apt-get -y install curl php php-curl php-zip php-mbstring php-xml composer
            cd mission-portal
            # install PHP dependencies from composer
            composer install
        fi
        )

        # packages needed for autogen
        sudo apt-get install git autoconf automake m4 make bison flex \
            binutils libtool gcc g++ libc-dev libpam0g-dev python psmisc \
            libtokyocabinet-dev libssl-dev libpcre3-dev default-jre-headless

        NO_CONFIGURE=1 PROJECT=nova ./buildscripts/build-scripts/autogen

        # packages needed for building
        sudo apt-get install bison flex binutils build-essential fakeroot ntp \
            dpkg-dev libpam0g-dev python debhelper pkg-config psmisc nfs-common
        # On Ubuntu Trusty, we need to remove these packages
        # otherwise apt fails miserably on next line
        [ "$(lsb_release --release --short)" = "14.04" ] && sudo apt-get purge emacs emacs24
        # remove unwanted dependencies
        sudo apt-get purge libltdl-dev libltdl7 libtool

        BUILD_TYPE=DEBUG; ESCAPETEST=yes;
        export BUILD_TYPE ESCAPETEST

        # cleaning not needed, since Travis always gives us a clean VM
        # ./buildscripts/build-scripts/clean-buildmachine
        ./buildscripts/build-scripts/build-environment-check
        ./buildscripts/build-scripts/install-dependencies
        ./buildscripts/build-scripts/configure
        ./buildscripts/build-scripts/generate-source-tarballs
        ./buildscripts/build-scripts/compile
        # ./buildscripts/build-scripts/test
        ./buildscripts/build-scripts/package
        ./buildscripts/build-scripts/prepare-results

        s3cmd put --reduced-redundancy --no-progress --acl-public \
            output/--/*.deb $DEB_PACKAGE
        s3cmd put --reduced-redundancy --no-progress --acl-public \
            core/cf-testd/.libs/cf-testd $TESTD
        set +ex
        curl -u Lex-2008:$GITHUB_STATUS_TOKEN \
            https://api.github.com/repos/$TRAVIS_REPO_SLUG/statuses/$SHA -d \
            '{"state":"success","context":"travis/Lex-2008/build",'\
'"description":"click there to download the build","target_url":"'$DOWNLOAD_DIR'/build.deb"}'
        ;;

    ( acceptance-test )
        s3cmd get --no-progress $DEB_PACKAGE cfe.deb
        install_package
        # create a fake rpmvercmp which always returns true
        sudo ln -s "$(which true)" "$PREFIX/bin/rpmvercmp"
        test -d core || git clone --recursive -b "$TRAVIS_BRANCH" git@github.com:cfengine/core.git
        test -d enterprise || git clone --recursive -b "$TRAVIS_BRANCH" git@github.com:cfengine/enterprise.git
        chmod -R u+w */tests/acceptance
        chmod -R g-w */tests/acceptance
        cd core/tests/acceptance
        rm -rf ./05_processes/01_matching/timed/stime.cf \
            ./05_processes/01_matching/promiser_match_is_correct.cf \
            ./07_packages/00*.cf \
            ./10_files/11_xml_edits \
            ./25_cf-execd
        set +e
        sudo ./testall \
            --bindir="$PREFIX/bin" \
            --tests=common,timed,slow,errorexit,serial,network,libxml2,libcurl,unsafe \
            --gainroot=sudo
        RET1=$?
        set -e
        pwd
        ls -lad workdir
        sudo tar cz * >core-tests-acceptance.tar.gz
        s3cmd put --reduced-redundancy --no-progress \
            core-tests-acceptance.tar.gz $S3_DIR/core-tests-acceptance.tar.gz
        cd -
        cp core/tests/acceptance/*.cf.sub enterprise/tests/acceptance
        cp core/tests/acceptance/root-*.pub enterprise/tests/acceptance
        cp core/tests/acceptance/root-*.priv enterprise/tests/acceptance
        cd enterprise/tests/acceptance
        rm -rf $(find compliance -name *.cf | grep -v basic.cf)
        echo export CORE=../../../core > testall.env
        echo export ENTERPRISE=../.. >> testall.env
        echo export \"CFENGINE_TEST_OVERRIDE_EXTENSION_LIBRARY_DIR=$PREFIX/lib\" >> testall.env
        set +e
        sudo ./testall \
            --bindir="$PREFIX/bin" \
            --tests=common,timed,slow,errorexit,serial,network,libxml2,libcurl,unsafe \
            --gainroot=sudo
        RET2=$?
        set -e
        sudo tar cz * >enterprise-tests-acceptance.tar.gz
        s3cmd put --reduced-redundancy --no-progress \
            enterprise-tests-acceptance.tar.gz $S3_DIR/enterprise-tests-acceptance.tar.gz
        exit `expr $RET1 + $RET2` # if one of them is non-zero, fail the build
        ;;

    ( reporting-test )
        sudo apt-get -y install python-psycopg2
        s3cmd get --no-progress $DEB_PACKAGE cfe.deb
        install_package
        sudo service cfengine3 restart
        ps aux | grep cf-
        s3cmd get --no-progress $TESTD cf-testd
        sudo mv cf-testd "$PREFIX/bin"
        sudo chown root:root "$PREFIX/bin/cf-testd"
        sudo chmod a+x "$PREFIX/bin/cf-testd"
        sudo chown root:root nova/tests/reporting/minimal.cf
        sudo chmod 600 nova/tests/reporting/minimal.cf
        cd nova/tests/reporting
        export TEST_OPTIONS="--no-files-setup --no-db-setup --wipe-db"
        sudo prove -v *.test
    ;;

    ( schema-test )
        # NOTE: these tests will manipulate any of our CFE databases
        # so parallel execution is not possible
        s3cmd get --no-progress $DEB_PACKAGE cfe.deb
        install_package
        sudo service cfengine3 restart
        test -d nova && cd nova/tests/schema
        test -d mission-portal && cd mission-portal/tests/schema
        sudo --preserve-env sh -c "./runtests.sh 2>&1"
    ;;
        
    ( deployment-test )
        s3cmd get --no-progress $DEB_PACKAGE cfe.deb
        install_package
        sudo cf-agent -B "$(ifconfig | grep -A1 Ethernet | sed '2!d;s/.*addr:\([0-9.]*\).*/\1/')"
    ;;

    ( deployment-test-reporting )
        sudo apt-get -y install python-psycopg2
        s3cmd get --no-progress $DEB_PACKAGE cfe.deb
        install_package
        sudo touch empty.cf
        sudo cf-promises --show-vars ./empty.cf | grep -F 'default:sys.ipv4 ' | awk '{print $2}' > ip.txt
        sudo cf-agent -B "$(head -n 1 ip.txt)"
        sudo ps aux | grep [c]f-
        cd nova/tests/reporting
        sudo python deployment_test.py
    ;;

esac
