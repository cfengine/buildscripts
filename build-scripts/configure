#!/bin/sh -x


. `dirname "$0"`/functions
. detect-environment
. compile-options
. version

case "$PROJECT" in
    community)  NOVA=no   ;;
    nova)       NOVA=yes  ;;
    *) fatal "Unknown project: $PROJECT"  ;;
esac


P=$BUILDPREFIX

ARGS="--prefix=$P --libdir=$P/lib --with-workdir=$P --sysconfdir=/etc --with-openssl=$P --with-pcre=$P --with-init-script"

if [ $EMBEDDED_DB = lmdb ]
then
    var_append ARGS "--with-lmdb=$P"
fi
case "$DEPS" in
    *pthreads-w32*)  var_append ARGS "--with-pthreads=$P" ;;
esac
case "$DEPS" in
    *openldap*)  var_append ARGS "--with-ldap=$P" ;;
    *)           var_append ARGS "--without-ldap" ;;
esac
case "$DEPS" in
    *libxml2*)  var_append ARGS "--with-libxml2=$P" ;;
    *)          var_append ARGS "--without-libxml2" ;;
esac
case "$DEPS" in
    *libyaml*)  var_append ARGS "--with-libyaml=$P" ;;
    *)          var_append ARGS "--without-libyaml" ;;
esac
case "$DEPS" in
    *postgresql*) var_append ARGS "--with-postgresql=$P --without-mysql" ;;
    *)            var_append ARGS "--without-sql" ;;
esac
case "$DEPS" in
    *libacl*)  var_append ARGS "--with-libacl=$P" ;;
    *)         var_append ARGS "--without-libacl" ;;
esac
case "$DEPS" in
    *libvirt*)  var_append ARGS "--with-libvirt=$P" ;;
    *)          var_append ARGS "--without-libvirt" ;;
esac
# both libcurl or libcurl-hub are valid
case "$DEPS" in
    *libcurl*)  var_append ARGS "--with-libcurl=$P" ;;
    *)          var_append ARGS "--without-libcurl" ;;
esac
case "$ROLE" in
    hub)   var_append ARGS "--with-cfmod --with-enterprise-api --with-postgresql=$P" ;;
    agent) var_append ARGS "--without-cfmod --without-postgresql" ;;
    *)     fatal "Unknown ROLE: $ROLE" ;;
esac
case "$WITH_SYSTEMD" in
  yes)  var_append ARGS "--with-systemd-service" ;;
  *)    var_append ARGS "--without-systemd-service" ;;
esac

# RHEL 8 requires an SELinux policy
if [ "x$OS" = "xrhel" ] && [ "x${VER:0:1}" = "x8" ]; then
  var_append ARGS "--with-selinux-policy"
fi

# Cross-compiling Windows?
case "$ARCH-${OS_FAMILY}" in
  x86-mingw)  var_append ARGS "--host=i686-w64-mingw32"   ;;
  x64-mingw)  var_append ARGS "--host=x86_64-w64-mingw32" ;;
esac


case "$BUILD_TYPE" in

  RELEASE)
    CFLAGS="-g2 -O2 -DNDEBUG  $CFLAGS"
    ;;
  DEBUG)
    ARGS="$ARGS --enable-debug"
    # Override the default "-g3 -O0" that comes with ./configure --enable-debug
    # in order to reduce the size of the packages
    CFLAGS="-g2 -O1 $CFLAGS"
    ;;
  CODE_COVERAGE)
    ARGS="$ARGS --enable-debug"
    # lcov is not found in Windows and other platforms
    case "${OS}-${OS_VERSION}" in
      mingw*)
      ;;
      hpux*)
      ;;
      solaris*)
      ;;
      rhel-4.*)
      ;;
      aix*)
      ;;
      *)
      ARGS="$ARGS --enable-coverage"
      ;;
    esac
    ;;
  *)
    echo "Unknown build type: $BUILD_TYPE"
    exit 42
    ;;
esac

( cd $BASEDIR/core && env $OPTS CFLAGS="$CFLAGS" ./configure $ARGS )

if [ "x$NOVA" = "xyes" ]
then
    ( cd $BASEDIR/enterprise && env $OPTS CFLAGS="$CFLAGS" ./configure $ARGS )
    if [ "x$ROLE" = "xhub" ]
    then
        ( cd $BASEDIR/nova && env $OPTS CFLAGS="$CFLAGS" ./configure $ARGS )
    fi
fi

( cd $BASEDIR/masterfiles && env $OPTS CFLAGS="$CFLAGS" ./configure $ARGS )
