From 488307ffa67ce70fc9755e560a74dac04bdcb0e4 Mon Sep 17 00:00:00 2001
From: Sawyer X <xsawyerx@cpan.org>
Date: Thu, 28 Sep 2017 22:34:39 +0200
Subject: [PATCH] Revert "Revert "Fallbacks for Perl_fp_class_denorm().""

This reverts commit 2749d0395cc1e21d69af38cde41490699fc6e3ab.

The original commit:

    commit e77299d3416e7e737523afdc0642734205e46d59
    Author: Jarkko Hietaniemi <jhi@iki.fi>
    Date:   Mon May 29 09:28:30 2017 +0300

        Fallbacks for Perl_fp_class_denorm().

        These may be needed if the compiler doesn't expose the C99 math
        without some special switches.

This provides a fix for CentOS 5.
---
 perl.h | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

diff --git a/perl.h b/perl.h
index 504caa911c..6ac9390384 100644
--- a/perl.h
+++ b/perl.h
@@ -6892,6 +6892,26 @@ extern void moncontrol(int);
 #  endif
 #endif
 
+/* We have somehow managed not to define the denormal/subnormal
+ * detection.
+ *
+ * This may happen if the compiler doesn't expose the C99 math like
+ * the fpclassify() without some special switches.  Perl tries to
+ * stay C89, so for example -std=c99 is not an option.
+ *
+ * The Perl_isinf() and Perl_isnan() should have been defined even if
+ * the C99 isinf() and isnan() are unavailable, and the NV_MIN becomes
+ * from the C89 DBL_MIN or moral equivalent. */
+#if !defined(Perl_fp_class_denorm) && defined(Perl_isinf) && defined(Perl_isnan) && defined(NV_MIN)
+#  define Perl_fp_class_denorm(x) ((x) != 0.0 && !Perl_isinf(x) && !Perl_isnan(x) && PERL_ABS(x) < NV_MIN)
+#endif
+
+/* This is not a great fallback: subnormals tests will fail,
+ * but at least Perl will link and 99.999% of tests will work. */
+#if !defined(Perl_fp_class_denorm)
+#  define Perl_fp_class_denorm(x) FALSE
+#endif
+
 #ifdef DOUBLE_IS_IEEE_FORMAT
 #  define DOUBLE_HAS_INF
 #  define DOUBLE_HAS_NAN
-- 
2.15.0-rc1-301-g0bcaefb

