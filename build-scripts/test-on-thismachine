#!/bin/sh -x

. `dirname "$0"`/functions
. detect-environment
. compile-options
. version

case "$OS" in
  mingw)
    if [ "xno" != "x$ESCAPETEST" ]
    then
      create-empty-test
    else
      test-on-windows
    fi
    ;;
esac

if [ "$TEST_SHELL" = "1" ]; then
  if [ -n "$SHELL" ]; then
    "$SHELL" -i
  elif [ -f /bin/bash ]; then
    /bin/bash -i
  else
    /bin/sh -i
  fi
  echo "Forcing failure to interrupt build..."
  exit 1
else
  if [ "$TESTS" = all ]; then
    chmod -R g-w $BASEDIR/core/tests/acceptance/*
    chmod -R g-w $BASEDIR/masterfiles/tests/acceptance/*
    chmod -R g-w $BASEDIR/masterfiles/lib/*
    chmod -R g-w $BASEDIR/masterfiles/inventory/*
    if test "x$PROJECT" != "xcommunity"; then
      chmod -R g-w $BASEDIR/enterprise/tests/acceptance/*
    fi
    for project in `projects_to_test`
    do
        # Unfortunately VERBOSE env variable is being used by both
        # "testall" script and automake. As a result, setting VERBOSE=1
        # causes testall to pass "1" as an argument to cf-agent!
        # Workarount: VERBOSE=-I
        set +e # skip quick failure so we can analyze core dumps
        NETWORK_TESTS=0 $MAKE -C $BASEDIR/$project VERBOSE=-I check
        rc=$?
        if [ "$rc" -ne "0" ]; then
          find "$BASEDIR/$project" -name 'core*' -type f >core.log
        fi
        exit $rc
    done
  elif [ "$TESTS" = unit ]
  then
      $MAKE -C $BASEDIR/core/tests/unit VERBOSE=-I check
  fi
fi
