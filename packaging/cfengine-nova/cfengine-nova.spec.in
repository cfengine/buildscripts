%define prefix %{buildprefix}

Summary: The CFEngine Configuration System
Name: cfengine-nova
Version: @@VERSION@@
Release: @@RELEASE@@
Vendor: CFEngine AS
License: COSL
Group: Applications/System
URL: http://cfengine.com/
BuildRoot: %{_topdir}/%{name}-%{version}-%{release}-buildroot
Obsoletes: cfengine3, cfengine-community
Requires: coreutils gzip

AutoReqProv: no

%if %{?with_debugsym}%{!?with_debugsym:0}
%define debug_package {nil}
%endif

%description
CFEngine is the standalone, open-source datacenter management platform run by
leading enterprises since 1993. Customize your IT systems, align to network,
business and regulatory needs, monitor problems, automatically repair and
maintain systems.

%install
rm -rf $RPM_BUILD_ROOT

mkdir -p $RPM_BUILD_ROOT%{prefix}
cp -a %{prefix}/* $RPM_BUILD_ROOT%{prefix}
cp -a %{_basedir}/cfengine/dist/* $RPM_BUILD_ROOT

#Copy the modified init.d script according to the working directory
cp %{_basedir}/enterprise/misc/init.d/cfengine3 $RPM_BUILD_ROOT/etc/init.d/cfengine3


# Remove useless stuff

rm -f $RPM_BUILD_ROOT%{prefix}/lib/libpromises.la
rm -f $RPM_BUILD_ROOT%{prefix}/lib/libpromises.so
rm -f $RPM_BUILD_ROOT%{prefix}/lib/cfengine-enterprise.la
rm -rf $RPM_BUILD_ROOT%{prefix}/share/CoreBase
rm -f $RPM_BUILD_ROOT%{prefix}/bin/getfacl
rm -f $RPM_BUILD_ROOT%{prefix}/bin/openssl
rm -rf $RPM_BUILD_ROOT%{prefix}/ssl


%clean
rm -rf $RPM_BUILD_ROOT

%pre
#
# Work around bug in CFEngine <= 3.6.1: The %preun script stops the services,
# but it shouldn't when we upgrade. Later versions are fixed, but it's the *old*
# %preun script that gets called when we upgrade, so we have to work around it
# by using the %posttrans script, which is the only script from the new package
# that is called after %preun. Unfortunately it doesn't tell you whether or not
# you're upgrading, so we need to remember it by using the file below.
#
# This section can be removed completely when we no longer support upgrading
# from the 3.6 series.
#
if [ $1 -eq 2 ]; then
  if %{prefix}/bin/cf-agent -V | egrep '^CFEngine Core 3\.([0-5]|6\.[01])' > /dev/null; then
    ( echo "Upgraded from:"; %{prefix}/bin/cf-agent -V ) > %{prefix}/BROKEN_UPGRADE_NEED_TO_RESTART_DAEMONS.txt
  fi
fi

exit 0

%post

#
# systemd support, if there is systemctl, then prepare unit file.
#
if test -x /bin/systemctl; then
    if [ ! -d /usr/lib/systemd/scripts ]; then
        mkdir -p /usr/lib/systemd/scripts
    fi
    if [ ! -f /usr/lib/systemd/scripts/cfengine3 ]; then
        cp -f /etc/init.d/cfengine3 /usr/lib/systemd/scripts
        chmod 0755 /usr/lib/systemd/scripts/cfengine3
    fi
    if [ ! -f /usr/lib/systemd/system/cfengine3.service ]; then
        cat > /usr/lib/systemd/system/cfengine3.service << EOF
[Unit]
Description=CFEngine 3 deamons
 
[Service]
Type=oneshot
EnvironmentFile=/etc/sysconfig/cfengine3
ExecStart=/usr/lib/systemd/scripts/cfengine3 start
ExecStop=/usr/lib/systemd/scripts/cfengine3 stop
RemainAfterExit=yes
 
[Install]
WantedBy=multi-user.target
EOF
    fi
fi

#
# Register CFEngine initscript, if not yet.
#
if [ $1 -eq 1 ]; then
    chkconfig --add cfengine3
    if [ -f /usr/lib/systemd/system/cfengine3.service ]; then
        test -x /bin/systemctl && systemctl enable cfengine3 > /dev/null 2>&1
    fi
fi
if [ $1 -eq 2 ]; then
    if [ -f /usr/lib/systemd/system/cfengine3.service ]; then
        test -x /bin/systemctl && systemctl enable cfengine3 > /dev/null 2>&1
    fi
fi


#
# Generate a host key
#
if [ ! -f %prefix/ppkeys/localhost.priv ]; then
    %prefix/bin/cf-key >/dev/null || :
fi

if [ -f %prefix/bin/cf-twin ]; then
    /bin/rm %prefix/bin/cf-twin
fi

/bin/cp %prefix/bin/cf-agent %prefix/bin/cf-twin
for i in cf-agent cf-promises cf-key cf-execd cf-serverd cf-monitord cf-runagent;
do
	if [ -f %prefix/bin/$i -a -d /usr/local/sbin ]; then
		ln -sf %prefix/bin/$i /usr/local/sbin/$i || true
	fi
	if [ -f /usr/share/man/man8/$i.8.gz ]; then
		rm -f /usr/share/man/man8/$i.8.gz
	fi
	%prefix/bin/$i -M > /usr/share/man/man8/$i.8 && gzip /usr/share/man/man8/$i.8
done

if [ $1 -eq 1 ]; then
    #
    # Start CFEngine during installation
    #
    test -f %prefix/inputs/promises.cf && service cfengine3 start || true
elif [ $1 -eq 2 ]; then
    #
    # And restart during upgrade
    #
    service cfengine3 restart
fi

exit 0

%preun
if [ $1 -eq 0 ]; then
 
    #
    # Unregister CFEngine initscript.
    #
    ps aux | grep -v grep | grep cf- > /dev/null

    if [ $? -eq 0 ]; then
        service cfengine3 stop
    fi
  
    #
    # Unregister CFEngine initscript on uninstallation.
    #
    chkconfig --del cfengine3

    #
    # systemd support
    #
    test -x /bin/systemctl && systemctl disable cfengine3 > /dev/null 2>&1
    if [ -f /usr/lib/systemd/scripts/cfengine3 ]; then
        rm -f /usr/lib/systemd/scripts/cfengine3
    fi
    if [ -f /usr/lib/systemd/system/cfengine3.service ]; then
        rm -f /usr/lib/systemd/system/cfengine3.service
    fi
fi

#
# Clean lock files created by initscript, if any
#
for i in cf-execd cf-serverd cf-monitord cf-hub; do
    rm -f /var/lock/$i /var/lock/subsys/$i
done

exit 0

%posttrans
#
# Work around bug in CFEngine <= 3.6.1. See BROKEN_UPGRADE_NEED_TO_RESTART_DAEMONS.txt above.
#
# This section can be removed completely when we no longer support upgrading
# from the 3.6 series.
#
if [ -f %{prefix}/BROKEN_UPGRADE_NEED_TO_RESTART_DAEMONS.txt ]; then
  service cfengine3 start
  rm -f %{prefix}/BROKEN_UPGRADE_NEED_TO_RESTART_DAEMONS.txt
fi

exit 0

%files
%defattr(755,root,root)

# Main program
%dir %prefix
%dir %prefix/bin
%prefix/bin/cf-agent
%prefix/bin/cf-execd
%prefix/bin/cf-key
%prefix/bin/cf-monitord
%prefix/bin/cf-promises
%prefix/bin/cf-runagent
%prefix/bin/cf-serverd
%prefix/bin/cf-upgrade

# LMDB
%prefix/bin/lmdump
%prefix/bin/lmmgr
%prefix/bin/mdb_copy
%prefix/bin/mdb_stat

# Auxiliary programs
%if "%{version}" >= "3.0"
%prefix/bin/rpmvercmp
%endif

# Initscript, other configuration
/etc/init.d/cfengine3
/etc/sysconfig/cfengine3
/etc/profile.d/cfengine.sh

%defattr(644,root,root,755)
%dir %prefix/lib
%prefix/lib/lib*.so*
%prefix/lib/cfengine-enterprise.so

# Documentation
%dir %prefix/share
%prefix/share/doc

# Private directories

%defattr(700,root,root,700)
%dir %prefix/ppkeys
%dir %prefix/outputs
%dir %prefix/inputs
%dir %prefix/modules


%changelog
